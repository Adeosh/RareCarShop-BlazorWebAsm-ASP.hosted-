@page "/admin/car-equipments"

@inject ICarEquipmentService CarEquipmentService
@implements IDisposable
@attribute [Authorize(Roles = "Admin")]

@foreach (var carEquipment in CarEquipmentService.CarsEquipment)
{
    @if (carEquipment.Editing)
    {
        <EditForm Model="editingCarEquipmente" OnSubmit="UpdateProductType">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editingCarEquipmente.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @carEquipment.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="@(() => EditProductType(carEquipment))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Добавить новуй комплектацию
</button>

@code {
    CarEquipment editingCarEquipmente = null;

    protected override async Task OnInitializedAsync()
    {
        await CarEquipmentService.GetCarEquipments();
        CarEquipmentService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CarEquipmentService.OnChange -= StateHasChanged;
    }

    private void EditProductType(CarEquipment carEquipment)
    {
        carEquipment.Editing = true;
        editingCarEquipmente = carEquipment;
    }

    private void CreateNewProductType()
    {
        editingCarEquipmente = CarEquipmentService.CreateNewCarEquipment();
    }

    private async Task UpdateProductType()
    {
        if (editingCarEquipmente.IsNew)
            await CarEquipmentService.AddCarEquipment(editingCarEquipmente);
        else
            await CarEquipmentService.UpdateCarEquipment(editingCarEquipmente);
        editingCarEquipmente = new CarEquipment();
    }
}
